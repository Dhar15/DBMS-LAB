--Create table Student
CREATE TABLE STUDENT(
 USN CHAR(10),
 SNAME VARCHAR(20),
 ADDRESS VARCHAR(25),
 PHONE NUMBER(10),
 GENDER CHAR,
 CONSTRAINT PK_A PRIMARY KEY(USN)
);

--Create table Semsec
CREATE TABLE SEMSEC(
 SSID CHAR(2),
 SEM NUMBER(1),
 SEC CHAR,
 CONSTRAINT PK_B PRIMARY KEY(SSID),
 CONSTRAINT C CHECK(SEM BETWEEN 1 AND 8)
);

--Create table Class
CREATE TABLE CLASS(
 USN CHAR(10),
 SSID CHAR(2),
 CONSTRAINT PK_D PRIMARY KEY(USN,SSID),
 CONSTRAINT FK_E FOREIGN KEY(USN) REFERENCES STUDENT(USN) ON DELETE CASCADE,
 CONSTRAINT FK_F FOREIGN KEY(SSID) REFERENCES SEMSEC(SSID) ON DELETE CASCADE
);

--Create table Subject
CREATE TABLE SUBJECT(
 SUBCODE VARCHAR(7),
 TITLE VARCHAR(20),
 SEM NUMBER(1),
 CREDITS NUMBER(1),
 CONSTRAINT PK_G PRIMARY KEY(SUBCODE)
);

--Create table IAMarks
CREATE TABLE IAMARKS(
 USN CHAR(10),
 SUBCODE VARCHAR(7),
 SSID CHAR(2),
 TEST1 NUMBER(2),
 TEST2 NUMBER(2),
 TEST3 NUMBER(2),
 FINALIA NUMBER(2),
 CONSTRAINT PK_H PRIMARY KEY(USN,SUBCODE,SSID),
 CONSTRAINT FK_I FOREIGN KEY(USN) REFERENCES STUDENT(USN) ON DELETE CASCADE,
 CONSTRAINT FK_J FOREIGN KEY(SSID) REFERENCES SEMSEC(SSID) ON DELETE CASCADE,
 CONSTRAINT FK_L FOREIGN KEY(SUBCODE) REFERENCES SUBJECT(SUBCODE) ON DELETE CASCADE
);

--Insert values into respective table.
INSERT INTO STUDENT VALUES('&USN','&SNAME','&ADDRESS',&PHONE,'&GENDER');

INSERT INTO SEMSEC VALUES('&SSID',&SEM,'&SEC');

INSERT INTO CLASS VALUES('&USN','&SSID');

INSERT INTO SUBJECT VALUES('&SUBCODE','&TITLE',&SEM,&CREDITS);

INSERT INTO IAMARKS(USN,SUBCODE,SSID,TEST1,TEST2,TEST3)VALUES('&USN','&SUBCODE','&SSID',&TEST1,&TEST2,&TEST3);


Q.1 List all the student details studying in fourth semester ‘C’ section.
>SELECT S.USN,S.SNAME,S.ADDRESS,S.PHONE,S.GENDER
 FROM STUDENT S,CLASS C,SEM_SEC SS
 WHERE S.USN=C.USN 
 AND SS.SSID=C.SSID 
 AND SS.SEM=4 
 AND SS.SEC='C';

Q.2 Compute the total number of male and female students in each semester and ineach section.
> SELECT SS.SEM,SS.SEC,S.GENDER,COUNT(S.GENDER)
  FROM STUDENT S,SEMSEC SS,CLASS C
  WHERE S.USN=C.USN AND SS.SSID=C.SSID
  GROUP BY SS.SEM,SS.SEC,S.GENDER;

Q.3 Create a view of Test1 marks of student USN ‘1mv15cs060’ in all subjects.
>CREATE VIEW TEST1_MARKS AS
 SELECT USN,SUBCODE,TEST1
 FROM IAMARKS
 WHERE USN='1MV15CS060';
 
Q.4 Calculate the FinalIA (average of three) and update the corresponding table for all students.
>DECLARE CURSOR C_IA_MARKS IS
 SELECT TEST1,TEST2,TEST3 FROM IAMARKS
 WHERE FINALIA IS NULL
 FOR UPDATE;
 C_T1 NUMBER;
 C_T2 NUMBER;
 C_T3 NUMBER;
 C_SUM NUMBER;
 C_AVG NUMBER;
 BEGIN
 OPEN C_IA_MARKS;
 LOOP
 FETCH C_IA_MARKS INTO C_T1,C_T2,C_T3;
 EXIT WHEN C_IA_MARKS%NOTFOUND;
 C_SUM := C_T1 + C_T2 + C_T3;
 DBMS_OUTPUT.PUT_LINE('SUM= ' || C_SUM);
 C_AVG := C_SUM/3;
 DBMS_OUTPUT.PUT_LINE('AVERAGE= ' || C_AVG);
 UPDATE IAMARKS SET FINALIA=C_AVG WHERE CURRENT OF C_IA_MARKS;
 END LOOP;
 CLOSE C_IA_MARKS;
 END;
 /
 
SELECT * FROM IAMARKS;
 
Q.5 Categorize students based on the following criterion: 
--    If FinalIA = 17 to 20 then CAT = ‘Outstanding’
--    If FinalIA = 12 to 16 then CAT = ‘Average’
--    If FinalIA< 12 then CAT = ‘Weak’
--    Give these details only for 8th semester A, B, and C section students.

> SELECT S.USN,S.SNAME,S.ADDRESS,S.PHONE,S.GENDER,
  ( CASE
    WHEN IA.FINALIA BETWEEN 17 AND 20 THEN 'OUTSTANDING'
    WHEN IA.FINALIA BETWEEN 12 AND 16 THEN 'AVERAGE'
    ELSE 'WEAK'
    END
  ) AS CAT
  FROM STUDENT S,SEMSEC SS,IAMARKS IA
  WHERE S.USN=IA.USN AND
  SS.SSID=IA.SSID AND
  SS.SEM=8;
