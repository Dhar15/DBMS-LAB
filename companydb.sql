--Create table Employee
CREATE TABLE EMPLOYEE (
 SSN NUMBER(9),
 NAME VARCHAR(20),
 ADDRESS VARCHAR(25),
 SEX CHAR,
 SALARY NUMBER(10,2),
 SUPERSSN NUMBER(9),
 DNO NUMBER(2),
 CONSTRAINT PA PRIMARY KEY(SSN),
 CONSTRAINT PB FOREIGN KEY(SUPERSSN) REFERENCES EMPLOYEE(SSN) ON DELETE CASCADE
);

--Create table Department
CREATE TABLE DEPARTMENT (
 DNO NUMBER(2),
 DNAME VARCHAR(15),
 MGRSSN NUMBER(9),
 MGRSTARTDATE DATE,
 CONSTRAINT PC PRIMARY KEY(DNO),
 CONSTRAINT PKD FOREIGN KEY(MGRSSN) REFERENCES EMPLOYEE(SSN) ON DELETE CASCADE
);

--Create table DLocation
CREATE TABLE DLOCATION (
 DNO NUMBER(2),
 DLOC VARCHAR(15),
 CONSTRAINT CPK PRIMARY KEY (DNO,DLOC),
 CONSTRAINT FK_D1 FOREIGN KEY (DNO) REFERENCES DEPARTMENT (DNO) ON DELETE CASCADE
);

--Create table Project
CREATE TABLE PROJECT (
 PNO NUMBER(2),
 PNAME VARCHAR(15),
 PLOCATION VARCHAR(15),
 DNO NUMBER(2),
 CONSTRAINT PKP PRIMARY KEY(PNO),
 CONSTRAINT FKD FOREIGN KEY (DNO) REFERENCES DEPARTMENT (DNO) ON DELETE CASCADE
);

--Create table Works_on
CREATE TABLE WORKS_ON (
 SSN NUMBER(9),
 PNO NUMBER(2),
 HOURS NUMBER(3),
 CONSTRAINT SP PRIMARY KEY (SSN,PNO),
 CONSTRAINT FKS FOREIGN KEY (SSN) REFERENCES EMPLOYEE (SSN) ON DELETE CASCADE,
 CONSTRAINT FKP FOREIGN KEY (PNO) REFERENCES PROJECT (PNO) ON DELETE CASCADE
);

--Insert values into respective table.
 INSERT INTO EMPLOYEE(SSN,NAME,ADDRESS,SEX,SALARY) VALUES(&SSN,'&NAME','&ADDRESS','&SEX',&SALARY);
 
 INSERT INTO DEPARTMENT VALUES(&DNO,'&DNAME',&MGRSSN,'&MGRSTARTDATE');
 
 UPDATE EMPLOYEE SET SUPERSSN=&SUPERSSN,DNO=&DNO WHERE SSN=&SSN;
 
 INSERT INTO DLOCATION VALUES(&DNO,'&DLOC');
 
 INSERT INTO PROJECT VALUES(&PNO,'&PNAME','&PLOCATION',&DNO);

 INSERT INTO WORKS_ON VALUES(&SSN,&PNO,&HOURS);


Q.1 Make a list of all project numbers for projects that involve an employee whose last name is ‘Scott’, either as a worker or as a manager of thedepartment that controls the project.
> (SELECT DISTINCT P.PNO
   FROM PROJECT P,DEPARTMENT D,EMPLOYEE E
   WHERE P.DNO=D.DNO 
   AND D.MGRSSN=E.SSN 
   AND E.NAME='SCOTT')
   UNION
   (SELECT DISTINCT P.PNO
    FROM PROJECT P,WORKS_ON W,EMPLOYEE E
    WHERE P.PNO=W.PNO 
    AND W.SSN=E.SSN 
    AND E.NAME='SCOTT');
    
Q.2 Show the resulting salaries if every employee working on the ‘IoT’ project isgiven a 10 percent raise.
> SELECT E.NAME,1.1*E.SALARY AS HIKE_SALARY
  FROM EMPLOYEE E,WORKS_ON W,PROJECT P
  WHERE E.SSN=W.SSN 
  AND P.PNO=W.PNO 
  AND P.PNAME='IOT';
   
Q.3 Find the sum of salaries of all employees of ‘accounts’ department as well as the max(salary),min(salary),avg(salary) in this department.
> SELECT SUM(E.SALARY) AS SUM_SAL,MAX(E.SALARY) AS MAX_SAL,MIN(E.SALARY) AS MIN_SAL,AVG(E.SALARY) AS AVG_SAL
  FROM EMPLOYEE E,DEPARTMENT D
  WHERE E.DNO=D.DNO 
  AND D.DNAME='ACCOUNTS';
   
Q.4 Retrive the name of each employee who works on all the projects controlled by department no. 5.(use NOT EXISTS ) operator.
> SELECT E.NAME FROM EMPLOYEE E
  WHERE NOT EXISTS(
  (SELECT P.PNO FROM PROJECT P WHERE P.DNO=5)
  MINUS 
  (SELECT W.PNO FROM WORKS_ON W WHERE E.SSN=W.SSN
 );
  
Q.5 For each department that has more than 5 employees retrieve the dno and no. of its employees who are making more than 6,00,000.
> SELECT DNO,COUNT(*) AS NO_OF_EMP
  FROM EMPLOYEE
  WHERE SALARY>600000 
  AND DNO IN( SELECT DNO FROM EMPLOYEE
              GROUP BY(DNO)
              HAVING COUNT(*)>5 )
  GROUP BY DNO;
