--Create table Actor
CREATE TABLE ACTOR(
 ACT_ID NUMBER(2),
 ACT_NAME VARCHAR(15),
 ACT_GENDER CHAR,
 CONSTRAINT PK_AID PRIMARY KEY(ACT_ID)
);

--Create table Director
CREATE TABLE DIRECTOR(
 DIR_ID NUMBER(2),
 DIR_NAME VARCHAR(20),
 DIR_PHONE NUMBER(10),
 CONSTRAINT PK_DID PRIMARY KEY(DIR_ID)
);

--Create table Movies
CREATE TABLE MOVIES(
 MOV_ID NUMBER(3),
 MOV_TITLE VARCHAR(25),
 MOV_YEAR NUMBER(4),
 MOV_LANG VARCHAR(15),
 DIR_ID NUMBER(2),
 CONSTRAINT PK_MID PRIMARY KEY(MOV_ID),
 CONSTRAINT FK_DIR FOREIGN KEY(DIR_ID) REFERENCES DIRECTOR(DIR_ID) ON DELETE CASCADE
);

--Create table Movie_cast
CREATE TABLE MOVIE_CAST(
 ACT_ID NUMBER(2),
 MOV_ID NUMBER(3),
 ROLE VARCHAR(20),
 CONSTRAINT CPK_AM PRIMARY KEY(ACT_ID,MOV_ID),
 CONSTRAINT FK_MA FOREIGN KEY(ACT_ID) REFERENCES ACTOR(ACT_ID) ON DELETE CASCADE,
 CONSTRAINT FK_MD FOREIGN KEY(MOV_ID) REFERENCES MOVIES(MOV_ID) ON DELETE CASCADE
);

--Create table Rating
CREATE TABLE RATING(
 MOV_ID NUMBER(3),
 REV_STARS NUMBER(1),
 CONSTRAINT CPK_MCT PRIMARY KEY(MOV_ID,REV_STARS),
 CONSTRAINT FK_MCD FOREIGN KEY(MOV_ID) REFERENCES MOVIES(MOV_ID) ON DELETE CASCADE
);

--Insert values into respective tables.
INSERT INTO ACTOR VALUES(&ACT_ID,'&ACT_NAME','&ACT_GENDER');

INSERT INTO DIRECTOR VALUES(&DIR_ID,'&ADIR_NAME',&DIR_PHONE);

INSERT INTO MOVIES VALUES(&MOV_ID,'&MOV_TITLE',&MOV_YEAR,'&MOV_LANG',&DIR_ID);

INSERT INTO MOVIE_CAST VALUES(&ACT_ID,&MOV_ID,'&ROLE');

INSERT INTO RATING VALUES(&MOV_ID,&REV_STARS);


Q.1 List the titles of all movies directed by ‘Hitchcock’.
>SELECT M.MOV_TITLE
 FROM MOVIES M,DIRECTOR D
 WHERE D.DIR_ID=M.DIR_ID AND D.DIR_NAME='HITCHCOCK';
 
Q.2 Find the movie names where one or more actors acted in two or more movies.
> SELECT M.MOV_TITLE,A.ACT_NAME
  FROM MOVIES M,ACTOR A,MOVIE_CAST M1
  WHERE M.MOV_ID=M1.MOV_ID 
  AND M1.ACT_ID=A.ACT_ID 
  AND M1.ACT_ID IN ( SELECT ACT_ID FROM MOVIE_CAST
                     GROUP BY ACT_ID
                     HAVING COUNT(MOV_ID)>1 );
                     
Q.3 List all actors who acted in a movie before 2000 and also in a movie  after 2015. (use JOIN operation)
>(SELECT A.ACT_NAME
  FROM ACTOR A JOIN MOVIE_CAST M ON A.ACT_ID=M.ACT_ID
  JOIN MOVIES M1 ON M.MOV_ID=M1.MOV_ID
  WHERE M1.MOV_YEAR<2000 )
  INTERSECT
  (SELECT A.ACT_NAME
  FROM ACTOR A JOIN MOVIE_CAST M ON A.ACT_ID=M.ACT_ID
  JOIN MOVIES M1 ON M.MOV_ID=M1.MOV_ID
  WHERE M1.MOV_YEAR>2015 );
  
Q.4 Find  the  titleof  movies  and  number  of  stars  for  each  movie  that  has  at  least  one rating  and  find  the  highest  number  of  stars  that  movie  received.  Sort  the  result  by movie title.
>SELECT M.MOV_TITLE,MAX(R.REV_STARS)
 FROM MOVIES M,RATING R
 WHERE M.MOV_ID=R.MOV_ID 
 AND M.MOV_ID IN( SELECT MOV_ID
                  FROM RATING
                  GROUP BY MOV_ID,REV_STARS
                  HAVING REV_STARS>0 )
 GROUP BY M.MOV_TITLE
 ORDER BY M.MOV_TITLE;
 
Q.5 Update ratings of all movies directed by STEVEN SPIELBERG.
>UPDATE RATING SET REV_STARS=5
 WHERE MOV_ID IN ( SELECT MOV_ID FROM MOVIES
                   WHERE DIR_ID=( SELECT DIR_ID FROM DIRECTOR
                                  WHERE DIR_NAME='STEVEN SPIELBERG' )
 );
